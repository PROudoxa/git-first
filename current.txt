//: Playground - noun: a place where people can play

import UIKit

var str = "Hello, playground"

// обьявляем константы и переменные. разный формы записи
// var - переменная, let - константа

var myFirstVariable = 12
myFirstVariable = -234
let myFirstConstant = 27
// myFirstConstant = 33 // не сможет быть перезаписана, т.к. это константа

var greetings = "Hello!"     // определится как String
greetings = "Hello, who are you? "

//типы переменных
let languageName: String = "Swift"
var version: Double = 1.0
var version2: Float = 1.1
var version3 = 1.2         // double 64 разряда. float 32. по умолчанию угадывается double.
let introduced: Int = 2014
let isAwesome: Bool = true

//склеиваем строки. Новая строка неизменна. если нужно изменить, надо заменить let на var
let whoIs = greetings + " - " + languageName

let pigs = 3
let cows = 2
let pigsSummary = "I have \(pigs) pigs."
let animalsSummary = "I have \(pigs + cows) animals."
let hello = "Hello \(languageName)!"


//                       КОЛЛЕКЦИИ. массив, словарь, сет
//Первый вид это - массивы, которые представляет собой набор элементов данных,
//к которым можно получить доступ через индекс начинающийся с 0

//Массивы
//пустые массивы
let emptyArray = [String]()
let emptyArrayOnemore = []

var cardNames: [String] = ["A", "K", "Q"]

//вывести эдемент массива на экран
print(cardNames[0])

//добавить элемент(ы)
//cardNames += "J"
cardNames += ["10", "9", "8"]
cardNames[0] = "Ace"                  //заменить элемент
cardNames[1..<3] = ["King", "Queen"]  //заменить диапазон элементов

// Словарь
let emptyDictionary = [String: Int16]()   // пустые
let emptyDictionaryOneMore = [:]          // словари

var cardAlternative = ["Jack" : 11, "Queen" : 12, "King" : 13]  // предугадан как [String]

cardAlternative["Ace"] = 15    // добавить элемент
cardAlternative["Ace"] = 1     // изменить его

print(cardAlternative["Ace"])     // извлечь

var occup = [
"Mal": "Cap"
]
print(occup["Mal"])
//---------------------------------------------
//                 ЦИКЛЫ
// while, do-while, for, for-in

for var i = 1; i < 3; ++i {
print(cardNames[i])
}

for cardName in cardNames {   // FOR .. IN .. {  ___  }
    print(cardName)
}

for number in 1...10 {   // 1..<11  аналог
    print("\(number) удвоено это \(number*2)")
}

for (cardName, cardValue) in cardAlternative {  // распечатка словаря
    print("\(cardName) = \(cardValue)")
}

================================
import UIKit
// man = true     муж
// woman = false  жен

class Person: NSObject {
    let name: String
    let age: Int8    // = 18
    
    init(name: String = "Unknown", age: Int8) {
        self.name = name
        self.age = age
    }
    
    func walk(person: Person) {
        print("someone \(person.name) walk")
    }
}

/////////////////////////////////////////////////////////////////

//func makeManIfWoman(pers: Person) -> Person {
//    if pers.sex == false {
//        pers.sex = true
//        print("Woman  \(pers.name) has become a man!")
//    } else {
//        print("Wow! \(pers.name) is a man already.")
//    }
//    return person
//}

func invertSex (p: Man) -> Person {
    if p.sex {
        p.sex = false
        print("man \(p.name) now is a pretty woman!")
    } else {
        p.sex = true
        print("woman \(p.name) now is a strong man!")

    }
    return p
}

func x(p:Person){
    print("Object \(p.name) is a person")
}

func x(p:Woman){
    print("Object \(p.name) is a woman")
}

func x(p:Man){
    print("Object \(p.name) is a man")
}

//func personInfo(pers: Person) {
//    if self.sex {
//        print(manInfo())
//    } else {
//       print(womanInfo())
//    }
//}

                        //подкласс "мужчина"
class Man: Person {
    var carColor: String = "White"
    var carBirthday: Int16 = 2000
    var sex: Bool = true
    
    init(name: String = "Unknown", age: Int8, sex: Bool, carColor: String, carBirthday: Int16) {
        super.init(name: name, age: age)
        self.sex = sex
        self.carColor = carColor
        self.carBirthday = carBirthday
    }
    
    override func walk(person: Person) {
        print("man \(person.name) is running fast!")
    }
    
    func manInfo(pers: Man) {
        print("man: \(self.name) | age: \(self.age) | sex: Male | car: \(self.carColor) | year: \(self.carBirthday) ")
    }
}

                         //подкласс "женщина"
class Woman: Person {
    var dressColor: String
    var sex: Bool = true
    
    init (name: String = "Unknown", age: Int8, sex: Bool, dressColor: String) {
        super.init(name: name, age: 18)
        self.sex = sex
        self.dressColor = dressColor
    }
    
    func womanInfo(person: Person) {
        print("woman: \(name) | age: \(age) | sex: Female | dress: \(dressColor) ")
    }
    
    func allTime18(sss: Woman) -> Woman {
        print("woman: \(self.name) | age: 18 | dress: \(self.dressColor) ")
        return sss
    }
}
//=========================================================================
var pers1 = Person(name: "Name1", age: 13)
var man1 = Man(name: "Man1", age: 77, sex: true, carColor: "Green", carBirthday: 2010)
var wom1 = Woman(name: "Жен4", age: 98, sex: false, dressColor: "Green")

print(x(pers1))


var person1 = Woman(name: "Жен1", age: 22, sex: false, dressColor: "Red")
var person2 = Woman(name: "Жен2", age: 98, sex: false, dressColor: "Red")
//person3.age = 25
var person3 = Man(name: "Мэн1", age: 15, sex: true, carColor: "Black", carBirthday: 1999)
var person4 = Man(name: "Мэн2", age: 77, sex: true, carColor: "Gray", carBirthday: 2004)


//var newPerson1 = makeManIfWoman(person1)
//var newPerson3 = makeManIfWoman(person3)

//var newPerson4 = invertSex(newPerson1)
//var newPerson5 = invertSex(newPerson3)


var woman1 = person1.allTime18(person1)




























